package calculator;

import javax.swing.JButton;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.geom.RoundRectangle2D;
import java.awt.Color;
import java.awt.FontMetrics;

public class RoundedButton extends JButton {

    private static final long serialVersionUID = 1L;
    private int cornerRadius;

    public RoundedButton(String text, int cornerRadius) {
        setText(text);
        this.cornerRadius = cornerRadius;
        setFocusPainted(false);
        setOpaque(false);
        setBorderPainted(false);
        setBorder(null);
    }

    @Override
    protected void paintComponent(Graphics g) {
        Graphics2D g2 = (Graphics2D) g.create();
        
        // Enable anti-aliasing for smoother edges
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

        // Determine the button state (pressed or not)
        if (getModel().isPressed()) {
            g2.setColor(getBackground().darker());  // Darker background when pressed
        } else {
            g2.setColor(getBackground());  // Normal background when not pressed
        }

        // Draw the rounded rectangle background
        g2.fill(new RoundRectangle2D.Double(0, 0, getWidth(), getHeight(), cornerRadius, cornerRadius));

        // Draw the button text
        g2.setColor(getForeground());  // Set text color (foreground)
        FontMetrics fm = g2.getFontMetrics();
        int stringWidth = fm.stringWidth(getText());
        int stringHeight = fm.getAscent();
        int x = (getWidth() - stringWidth) / 2;
        int y = (getHeight() + stringHeight) / 2 - fm.getDescent();

        g2.drawString(getText(), x, y);

        g2.dispose(); // Dispose the graphics object
    }
}
